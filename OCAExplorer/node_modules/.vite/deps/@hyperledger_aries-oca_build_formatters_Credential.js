import {
  require_build
} from "./chunk-UUNO4XUA.js";
import {
  __privateAdd,
  __privateGet,
  __privateSet,
  __publicField,
  __toESM
} from "./chunk-X5MHFPH7.js";

// node_modules/@hyperledger/aries-oca/build/formatters/Credential.js
var import_core = __toESM(require_build());
var _bundle;
var LocalizedCredential = class {
  constructor(bundle, record, language) {
    __privateAdd(this, _bundle, void 0);
    __publicField(this, "issuer");
    __publicField(this, "name");
    __publicField(this, "attributes");
    var _a, _b, _c;
    if (!language) {
      throw new Error("language is required");
    }
    __privateSet(this, _bundle, bundle);
    this.issuer = (_a = bundle.metadata.issuer) == null ? void 0 : _a[language];
    this.name = (_b = bundle.metadata.name) == null ? void 0 : _b[language];
    const credentialAttributes = ((_c = record.credentialAttributes) == null ? void 0 : _c.length) ? record.credentialAttributes : bundle.attributes.map((attribute) => {
      return new import_core.CredentialPreviewAttribute({ ...attribute, value: "" });
    });
    this.attributes = (credentialAttributes == null ? void 0 : credentialAttributes.filter((attribute) => bundle.getFlaggedAttribute(attribute.name)).map((attribute) => {
      const overlayOptions = bundle.getAttribute(attribute.name) ?? { name: attribute.name, type: "" };
      return new DisplayAttribute(attribute, overlayOptions, language);
    })) ?? [];
  }
  get primaryAttribute() {
    var _a;
    const name = (_a = __privateGet(this, _bundle).branding) == null ? void 0 : _a.primaryAttribute;
    return this.getAttribute(name);
  }
  get secondaryAttribute() {
    var _a;
    const name = (_a = __privateGet(this, _bundle).branding) == null ? void 0 : _a.secondaryAttribute;
    return this.getAttribute(name);
  }
  getAttribute(attributeName) {
    if (!attributeName) {
      return void 0;
    }
    return this.attributes.find((attribute) => attribute.name === attributeName);
  }
};
_bundle = new WeakMap();
var DisplayAttribute = class extends import_core.CredentialPreviewAttribute {
  constructor(options, overlayOptions, language) {
    var _a, _b;
    super(options);
    __publicField(this, "characterEncoding");
    __publicField(this, "standard");
    __publicField(this, "format");
    __publicField(this, "information");
    __publicField(this, "label");
    this.characterEncoding = overlayOptions.characterEncoding;
    this.standard = overlayOptions.standard;
    this.format = overlayOptions.format;
    this.information = (_a = overlayOptions.information) == null ? void 0 : _a[language];
    this.label = (_b = overlayOptions.label) == null ? void 0 : _b[language];
  }
  toJSON() {
    return { ...super.toJSON(), format: this.format, information: this.information, label: this.label };
  }
};
var _credentials;
var CredentialFormatter = class {
  constructor(bundle, record) {
    __privateAdd(this, _credentials, void 0);
    __privateSet(this, _credentials, bundle.languages.reduce((credentials, language) => {
      credentials[language] = new LocalizedCredential(bundle, record, language);
      return credentials;
    }, {}));
  }
  localizedCredential(language) {
    return __privateGet(this, _credentials)[language];
  }
};
_credentials = new WeakMap();
export {
  CredentialFormatter,
  DisplayAttribute,
  LocalizedCredential
};
//# sourceMappingURL=@hyperledger_aries-oca_build_formatters_Credential.js.map
