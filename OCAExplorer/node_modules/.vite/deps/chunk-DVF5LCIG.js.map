{
  "version": 3,
  "sources": ["../../@hyperledger/aries-oca/build/utils/color/hashCode.js", "../../@hyperledger/aries-oca/build/utils/color/mulberry32.js", "../../@hyperledger/aries-oca/build/utils/color/hashToRGBA.js", "../../@hyperledger/aries-oca/build/utils/color/generateColor.js", "../../@hyperledger/aries-oca/build/utils/color/luminanceForHexColor.js", "../../@hyperledger/aries-oca/build/utils/color/textColorForBackground.js"],
  "sourcesContent": ["/**\n * Generates a numerical hash based on a given string\n * @see https://stackoverflow.com/questions/3426404/create-a-hexadecimal-colour-based-on-a-string-with-javascript\n * @param { string } s given string\n * @returns { number } numerical hash value\n */\nconst hashCode = (s) => {\n    return s.split('').reduce((hash, char) => char.charCodeAt(0) + ((hash << 5) - hash), 0);\n};\nexport default hashCode;\n", "/**\n * Generates a pseudorandom number between 0 and 1 based on a seed\n * @see https://gist.github.com/tommyettinger/46a874533244883189143505d203312c\n * @see https://stackoverflow.com/questions/521295/seeding-the-random-number-generator-in-javascript\n * @param { number } seed any number\n * @returns { number } pseudorandom number between 0 and 1\n */\nconst mulberry32 = (seed) => {\n    let t = (seed += 0x6d2b79f5);\n    t = Math.imul(t ^ (t >>> 15), t | 1);\n    t ^= t + Math.imul(t ^ (t >>> 7), t | 61);\n    return ((t ^ (t >>> 14)) >>> 0) / 4294967296;\n};\nexport default mulberry32;\n", "import mulberry32 from './mulberry32';\n/**\n * Converts a numerical hash into a hexidecimal color string\n * @see https://helderesteves.com/generating-random-colors-js/#Generating_random_dark_colors\n * @param { number } hash numerical hash value (generated by hashCode function above)\n * @returns { string } hexidecimal string eg. #32d3cc\n */\nconst hashToRGBA = (hash) => {\n    let color = '#';\n    const colorRangeUpperBound = 256;\n    // once for r, g, b\n    for (let i = 0; i < 3; i++) {\n        // append a pseudorandom two-char hexidecimal value from the lower half of the color spectrum (to limit to darker colors)\n        color += ('0' + Math.floor((mulberry32(hash + i) * colorRangeUpperBound) / 2).toString(16)).slice(-2);\n    }\n    return color;\n};\nexport default hashToRGBA;\n", "import hashCode from './hashCode';\nimport hashToRGBA from './hashToRGBA';\nconst generateColor = (seed) => {\n    return hashToRGBA(hashCode(seed));\n};\nexport default generateColor;\n", "/**\n * Converts a hexidecimal color string into a luminance value\n * @param hex color string in hexidecimal format\n * @returns { number | undefined } between 0 and 255\n */\nconst luminanceForHexColor = (hex) => {\n    if (!/^#([A-Fa-f0-9]{6})$/.test(hex)) {\n        return;\n    }\n    const hexAsNumber = Number(`0x${hex.slice(1)}`);\n    const [r, g, b] = [(hexAsNumber >> 16) & 255, (hexAsNumber >> 8) & 255, hexAsNumber & 255];\n    // Scalars below defined [here](https://en.wikipedia.org/wiki/Relative_luminance)\n    const y = 0.2126 * r + 0.7152 * g + 0.0722 * b;\n    return Math.round(y);\n};\nexport default luminanceForHexColor;\n", "import luminanceForHexColor from './luminanceForHexColor';\nexport const textColorForBackground = (background) => {\n    const spectrum = {\n        black: '#000000',\n        darkGrey: '#313132',\n        mediumGrey: '#606060',\n        lightGrey: '#D3D3D3',\n        veryLightGrey: '#F2F2F2',\n        white: '#FFFFFF',\n    };\n    const midpoint = 255 / 2;\n    if ((luminanceForHexColor(background ?? '') ?? 0) >= midpoint) {\n        return spectrum.darkGrey;\n    }\n    return spectrum.white;\n};\n"],
  "mappings": ";AAMA,IAAM,WAAW,CAAC,MAAM;AACpB,SAAO,EAAE,MAAM,EAAE,EAAE,OAAO,CAAC,MAAM,SAAS,KAAK,WAAW,CAAC,MAAM,QAAQ,KAAK,OAAO,CAAC;AAC1F;AACA,IAAO,mBAAQ;;;ACFf,IAAM,aAAa,CAAC,SAAS;AACzB,MAAI,IAAK,QAAQ;AACjB,MAAI,KAAK,KAAK,IAAK,MAAM,IAAK,IAAI,CAAC;AACnC,OAAK,IAAI,KAAK,KAAK,IAAK,MAAM,GAAI,IAAI,EAAE;AACxC,WAAS,IAAK,MAAM,QAAS,KAAK;AACtC;AACA,IAAO,qBAAQ;;;ACNf,IAAM,aAAa,CAAC,SAAS;AACzB,MAAI,QAAQ;AACZ,QAAM,uBAAuB;AAE7B,WAAS,IAAI,GAAG,IAAI,GAAG,KAAK;AAExB,cAAU,MAAM,KAAK,MAAO,mBAAW,OAAO,CAAC,IAAI,uBAAwB,CAAC,EAAE,SAAS,EAAE,GAAG,MAAM,EAAE;AAAA,EACxG;AACA,SAAO;AACX;AACA,IAAO,qBAAQ;;;ACff,IAAM,gBAAgB,CAAC,SAAS;AAC5B,SAAO,mBAAW,iBAAS,IAAI,CAAC;AACpC;AACA,IAAO,wBAAQ;;;ACAf,IAAM,uBAAuB,CAAC,QAAQ;AAClC,MAAI,CAAC,sBAAsB,KAAK,GAAG,GAAG;AAClC;AAAA,EACJ;AACA,QAAM,cAAc,OAAO,KAAK,IAAI,MAAM,CAAC,GAAG;AAC9C,QAAM,CAAC,GAAG,GAAG,CAAC,IAAI,CAAE,eAAe,KAAM,KAAM,eAAe,IAAK,KAAK,cAAc,GAAG;AAEzF,QAAM,IAAI,SAAS,IAAI,SAAS,IAAI,SAAS;AAC7C,SAAO,KAAK,MAAM,CAAC;AACvB;AACA,IAAO,+BAAQ;;;ACdR,IAAM,yBAAyB,CAAC,eAAe;AAClD,QAAM,WAAW;AAAA,IACb,OAAO;AAAA,IACP,UAAU;AAAA,IACV,YAAY;AAAA,IACZ,WAAW;AAAA,IACX,eAAe;AAAA,IACf,OAAO;AAAA,EACX;AACA,QAAM,WAAW,MAAM;AACvB,OAAK,6BAAqB,cAAc,EAAE,KAAK,MAAM,UAAU;AAC3D,WAAO,SAAS;AAAA,EACpB;AACA,SAAO,SAAS;AACpB;",
  "names": []
}
